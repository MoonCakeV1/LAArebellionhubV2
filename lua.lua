--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v79=0;local v80;while true do if (v79==0) then v80=v2(v0(v30,16));if v19 then local v96=0;local v97;while true do if (v96==1) then return v97;end if (v96==0) then v97=v5(v80,v19);v19=nil;v96=1;end end else return v80;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v81=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -(878 -(282 + 595)))) -(v32-(1638 -(1523 + 114)))) + (620 -(555 + 64)))) ;return v81-(v81%(932 -(857 + 74))) ;else local v82=((513 + 57) -(367 + (286 -85)))^(v32-(928 -(214 + 713))) ;return (((v31%(v82 + v82))>=v82) and (1 + 0)) or (0 + 0) ;end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23()local v37,v38,v39,v40=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 + 0 ;return (v40 * (3720433 + 13056783)) + (v39 * 65536) + (v38 * ((2893 -1680) -((1648 -756) + 65))) + v37 ;end local function v24()local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,351 -(87 + 0 + 263) ,200 -(67 + 113) ) * ((2 + 0)^(78 -46))) + v41 ;local v45=v20(v42,16 + 5 ,123 -92 );local v46=((v20(v42,984 -(802 + 150) )==((793 -(368 + 423)) -1)) and  -(1 -0)) or ((3 -2) + 0) ;if (v45==(997 -(915 + 82))) then if (v44==0) then return v46 * ((18 -(10 + 8)) -0) ;else v45=(3 -2) + 0 ;v43=442 -(416 + 26) ;end elseif (v45==(2691 -644)) then return ((v44==(1187 -(1069 + 118))) and (v46 * (((6 -4) -1)/(0 -0)))) or (v46 * NaN) ;end return v8(v46,v45-(178 + 845) ) * (v43 + (v44/((3 -1)^52))) ;end local function v25(v47)local v48=0;local v49;local v50;while true do if (v48==1) then v49=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;v48=1 + (773 -(201 + 571)) ;end if (v48==(4 -1)) then return v6(v50);end if (v48==((1576 -(116 + 1022)) -(145 + 293))) then v49=nil;if  not v47 then v47=v23();if (v47==0) then return "";end end v48=431 -(44 + 386) ;end if (v48==(1488 -(998 + 488))) then v50={};for v88=(4 -3) + 0 , #v49 do v50[v88]=v2(v1(v3(v49,v88,v88)));end v48=3 + 0 ;end end end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;local v58;while true do if (v51==(1 -0)) then v54=nil;v55=nil;v51=122 -(30 + 90) ;end if (v51==3) then v58=nil;while true do local v90=0 + 0 ;local v91;while true do if ((0 + 0)~=v90) then else v91=0;while true do if (0==v91) then local v98=0;while true do if (v98~=1) then else v91=1 + 0 ;break;end if (v98==0) then if (v52==(0 + 0)) then local v187=0 -0 ;while true do if (v187==1) then v55={};v52=1 -0 ;break;end if (v187==0) then v53={};v54={};v187=2 -1 ;end end end if (v52==(2 + 0)) then for v200=1 + 0 ,v57 do local v201=396 -(115 + 281) ;local v202;local v203;local v204;while true do if (v201==(2 -1)) then v204=nil;while true do if (v202==(0 + 0)) then v203=v21();v204=nil;v202=2 -1 ;end if (v202~=1) then else if (v203==1) then v204=v21()~=0 ;elseif (v203==(7 -5)) then v204=v24();elseif (v203~=(870 -(550 + 317))) then else v204=v25();end v58[v200]=v204;break;end end break;end if (v201~=0) then else local v265=0;while true do if (v265~=(0 -0)) then else v202=0;v203=nil;v265=1 -0 ;end if (v265~=1) then else v201=2 -1 ;break;end end end end end v56[288 -(134 + 151) ]=v21();for v205=1,v23() do local v206=0;local v207;local v208;local v209;local v210;while true do if (0==v206) then v207=1665 -(970 + 695) ;v208=nil;v206=1;end if (v206~=(1 -0)) then else v209=nil;v210=nil;v206=2;end if (v206==(1992 -(582 + 1408))) then while true do if (v207~=(3 -2)) then else v210=nil;while true do if (v208~=(1 -0)) then else while true do if (v209==0) then v210=v21();if (v20(v210,1,3 -2 )~=0) then else local v295=0;local v296;local v297;local v298;local v299;while true do if (v295==2) then while true do if (v296==0) then local v300=1824 -(1195 + 629) ;while true do if (v300==1) then v296=1;break;end if ((0 -0)~=v300) then else v297=v20(v210,243 -(187 + 54) ,783 -(162 + 618) );v298=v20(v210,3 + 1 ,4 + 2 );v300=1;end end end if (v296~=(1 -0)) then else local v301=0;local v302;while true do if ((0 -0)~=v301) then else v302=0;while true do if (v302==(1 + 0)) then v296=1638 -(1373 + 263) ;break;end if (v302~=(1000 -(451 + 549))) then else v299={v22(),v22(),nil,nil};if (v297==0) then local v310=0 -0 ;local v311;while true do if ((0 -0)~=v310) then else v311=1384 -(746 + 638) ;while true do if ((0 + 0)==v311) then v299[4 -1 ]=v22();v299[4]=v22();break;end end break;end end elseif (v297==1) then v299[3]=v23();elseif (v297==(343 -(218 + 123))) then v299[3]=v23() -(2^(1597 -(1535 + 46))) ;elseif (v297==3) then local v316=0;local v317;while true do if (v316~=0) then else v317=0;while true do if (0~=v317) then else v299[3]=v23() -(2^(16 + 0)) ;v299[1 + 3 ]=v22();break;end end break;end end end v302=561 -(306 + 254) ;end end break;end end end if (v296~=(1 + 1)) then else if (v20(v298,1 -0 ,1)~=(1468 -(899 + 568))) then else v299[2 + 0 ]=v58[v299[4 -2 ]];end if (v20(v298,2,2)~=1) then else v299[3]=v58[v299[3]];end v296=606 -(268 + 335) ;end if (v296==3) then if (v20(v298,3,3)~=(291 -(60 + 230))) then else v299[576 -(426 + 146) ]=v58[v299[4]];end v53[v205]=v299;break;end end break;end if (v295~=1) then else v298=nil;v299=nil;v295=2;end if (v295==(0 + 0)) then v296=0;v297=nil;v295=1;end end end break;end end break;end if (v208~=(1456 -(282 + 1174))) then else local v288=0;while true do if (v288==(811 -(569 + 242))) then v209=0 -0 ;v210=nil;v288=1;end if (v288~=(1 + 0)) then else v208=1025 -(706 + 318) ;break;end end end end break;end if (v207~=(1251 -(721 + 530))) then else local v277=1271 -(945 + 326) ;while true do if ((0 -0)~=v277) then else v208=0;v209=nil;v277=1 + 0 ;end if (v277~=(701 -(271 + 429))) then else v207=1;break;end end end end break;end end end v52=3 + 0 ;end v98=1501 -(1408 + 92) ;end end end if (1~=v91) then else if (3~=v52) then else local v99=1086 -(461 + 625) ;while true do if (v99==0) then for v211=1289 -(993 + 295) ,v23() do v54[v211-(1 + 0) ]=v28();end return v56;end end end if ((1172 -(418 + 753))~=v52) then else local v100=0 + 0 ;while true do if (v100~=(1 + 0)) then else v58={};v52=1 + 1 ;break;end if (v100~=0) then else v56={v53,v54,nil,v55};v57=v23();v100=530 -(406 + 123) ;end end end break;end end break;end end end break;end if (v51==(1771 -(1749 + 20))) then local v86=0 + 0 ;while true do if (v86==1) then v51=1325 -(1249 + 73) ;break;end if (v86==0) then v56=nil;v57=nil;v86=1 + 0 ;end end end if (0==v51) then local v87=0;while true do if (v87~=(1146 -(466 + 679))) then else v51=2 -1 ;break;end if ((0 -0)==v87) then v52=0;v53=nil;v87=1;end end end end end local function v29(v59,v60,v61)local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...)local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=1;local v70= -1;local v71={};local v72={...};local v73=v12("#",...) -1 ;local v74={};local v75={};for v83=0,v73 do if (v83>=v67) then v71[v83-v67 ]=v72[v83 + 1 ];else v75[v83]=v72[v83 + 1 ];end end local v76=(v73-v67) + 1 ;local v77;local v78;while true do v77=v65[v69];v78=v77[1];if (v78<=22) then if (v78<=10) then if (v78<=4) then if (v78<=1) then if (v78>0) then local v101=v77[2];local v102,v103=v68(v75[v101](v13(v75,v101 + 1 ,v77[3])));v70=(v103 + v101) -1 ;local v104=0;for v132=v101,v70 do v104=v104 + 1 ;v75[v132]=v102[v104];end else do return;end end elseif (v78<=2) then local v105=0;local v106;while true do if (v105==0) then v106=v77[2];v75[v106]=v75[v106](v13(v75,v106 + 1 ,v77[3]));break;end end elseif (v78==3) then if (v75[v77[2]]==v77[4]) then v69=v69 + 1 ;else v69=v77[3];end else local v140=0;local v141;while true do if (v140==0) then v141=v77[2];v75[v141]=v75[v141](v75[v141 + 1 ]);break;end end end elseif (v78<=7) then if (v78<=5) then local v107=v77[2];local v108,v109=v68(v75[v107](v13(v75,v107 + 1 ,v77[3])));v70=(v109 + v107) -1 ;local v110=0;for v135=v107,v70 do v110=v110 + 1 ;v75[v135]=v108[v110];end elseif (v78>6) then do return;end else local v142=v77[2];v75[v142]=v75[v142](v13(v75,v142 + 1 ,v77[3]));end elseif (v78<=8) then v75[v77[2]]();elseif (v78>9) then v69=v77[3];else local v145=0;local v146;while true do if (v145==0) then v146=v77[2];v75[v146](v75[v146 + 1 ]);break;end end end elseif (v78<=16) then if (v78<=13) then if (v78<=11) then v75[v77[2]]=v29(v66[v77[3]],nil,v61);elseif (v78==12) then local v147=0;local v148;local v149;while true do if (v147==1) then v75[v148 + 1 ]=v149;v75[v148]=v149[v77[4]];break;end if (0==v147) then v148=v77[2];v149=v75[v77[3]];v147=1;end end else local v150=0;local v151;while true do if (v150==0) then v151=v77[2];v75[v151]=v75[v151]();break;end end end elseif (v78<=14) then v75[v77[2]]=v29(v66[v77[3]],nil,v61);elseif (v78>15) then local v152=0;local v153;local v154;while true do if (v152==0) then v153=v77[2];v154={};v152=1;end if (v152==1) then for v247=1, #v74 do local v248=0;local v249;while true do if (v248==0) then v249=v74[v247];for v278=0, #v249 do local v279=0;local v280;local v281;local v282;while true do if (v279==1) then v282=v280[2];if ((v281==v75) and (v282>=v153)) then v154[v282]=v281[v282];v280[1]=v154;end break;end if (v279==0) then v280=v249[v278];v281=v280[1];v279=1;end end end break;end end end break;end end else local v155=v77[2];v75[v155]=v75[v155](v75[v155 + 1 ]);end elseif (v78<=19) then if (v78<=17) then for v138=v77[2],v77[3] do v75[v138]=nil;end elseif (v78>18) then v75[v77[2]]=v61[v77[3]];else v75[v77[2]]=v60[v77[3]];end elseif (v78<=20) then v75[v77[2]]=v77[3];elseif (v78==21) then v75[v77[2]]();else v69=v77[3];end elseif (v78<=33) then if (v78<=27) then if (v78<=24) then if (v78==23) then v75[v77[2]]=v77[3];else local v117=v77[2];v75[v117](v13(v75,v117 + 1 ,v77[3]));end elseif (v78<=25) then if (v77[2]==v75[v77[4]]) then v69=v69 + 1 ;else v69=v77[3];end elseif (v78==26) then local v163=v77[2];v75[v163]=v75[v163](v13(v75,v163 + 1 ,v70));else local v165=v77[2];local v166={};for v191=1, #v74 do local v192=0;local v193;while true do if (v192==0) then v193=v74[v191];for v266=0, #v193 do local v267=v193[v266];local v268=v267[1];local v269=v267[2];if ((v268==v75) and (v269>=v165)) then local v272=0;while true do if (v272==0) then v166[v269]=v268[v269];v267[1]=v166;break;end end end end break;end end end end elseif (v78<=30) then if (v78<=28) then local v118=0;local v119;while true do if (v118==0) then v119=v77[2];v75[v119](v13(v75,v119 + 1 ,v77[3]));break;end end elseif (v78==29) then local v167=v77[2];v75[v167]=v75[v167](v13(v75,v167 + 1 ,v70));else local v169=0;local v170;local v171;local v172;while true do if (v169==0) then v170=v66[v77[3]];v171=nil;v169=1;end if (v169==1) then v172={};v171=v10({},{__index=function(v251,v252)local v253=0;local v254;while true do if (v253==0) then v254=v172[v252];return v254[1][v254[2]];end end end,__newindex=function(v255,v256,v257)local v258=v172[v256];v258[1][v258[2]]=v257;end});v169=2;end if (v169==2) then for v260=1,v77[4] do local v261=0;local v262;while true do if (v261==1) then if (v262[1]==37) then v172[v260-1 ]={v75,v262[3]};else v172[v260-1 ]={v60,v262[3]};end v74[ #v74 + 1 ]=v172;break;end if (v261==0) then v69=v69 + 1 ;v262=v65[v69];v261=1;end end end v75[v77[2]]=v29(v170,v171,v61);break;end end end elseif (v78<=31) then local v120=0;local v121;while true do if (v120==0) then v121=v77[2];v75[v121](v75[v121 + 1 ]);break;end end elseif (v78==32) then local v173=0;local v174;local v175;while true do if (v173==1) then v75[v174 + 1 ]=v175;v75[v174]=v175[v77[4]];break;end if (v173==0) then v174=v77[2];v175=v75[v77[3]];v173=1;end end else local v176=v77[2];v75[v176]=v75[v176]();end elseif (v78<=39) then if (v78<=36) then if (v78<=34) then v75[v77[2]]=v75[v77[3]][v77[4]];elseif (v78==35) then v75[v77[2]]=v75[v77[3]];elseif (v77[2]==v75[v77[4]]) then v69=v69 + 1 ;else v69=v77[3];end elseif (v78<=37) then v75[v77[2]]=v75[v77[3]];elseif (v78==38) then for v196=v77[2],v77[3] do v75[v196]=nil;end else v75[v77[2]]=v75[v77[3]][v77[4]];end elseif (v78<=42) then if (v78<=40) then local v126=0;local v127;local v128;local v129;while true do if (0==v126) then v127=v66[v77[3]];v128=nil;v126=1;end if (v126==1) then v129={};v128=v10({},{__index=function(v215,v216)local v217=0;local v218;while true do if (0==v217) then v218=v129[v216];return v218[1][v218[2]];end end end,__newindex=function(v219,v220,v221)local v222=v129[v220];v222[1][v222[2]]=v221;end});v126=2;end if (v126==2) then for v224=1,v77[4] do v69=v69 + 1 ;local v225=v65[v69];if (v225[1]==37) then v129[v224-1 ]={v75,v225[3]};else v129[v224-1 ]={v60,v225[3]};end v74[ #v74 + 1 ]=v129;end v75[v77[2]]=v29(v127,v128,v61);break;end end elseif (v78>41) then v75[v77[2]]=v60[v77[3]];elseif (v75[v77[2]]==v77[4]) then v69=v69 + 1 ;else v69=v77[3];end elseif (v78<=43) then v75[v77[2]]=v61[v77[3]];elseif (v78==44) then local v184=0;local v185;while true do if (v184==0) then v185=v77[2];v75[v185](v13(v75,v185 + 1 ,v70));break;end end else local v186=v77[2];v75[v186](v13(v75,v186 + 1 ,v70));end v69=v69 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);
